                        [Node 0]
                            |
                        [IF 1]
                       /       \
                  [Node 2]    [Node 3]
                    |              \
                  [IF 2]            [Node 6]
                /       \              /
            [Node 4]  [Node 5]       /
                \        |         /
                 \    [Node 7]   /
                  \     /      /
                  [Node  8]   /
                      \    /
                     [Node 4]



这是我定义的图结构Java代码，我现在希望能定义一个方法将图进行优化把连续的单链路径（串行路径）合并成一个节点集合，如下优化前的图结构：
└── [1]
    ├── [2]
    │   └── [6]
    │       ├── [7]
    │       │   └── [9]
    │       └── [8]
    │           └── [9]
    └── [3]
        └── [4]
            └── [5]

优化后应该变成：

└── [1]
    ├── [2,6]
    │       ├── [7]
    │       │   └── [9]
    │       └── [8]
    │           └── [9]
    └── [3,4,5]
          └── [9]




        1 (条件任务)
(true) /           \(false)
       2            3
       |            |
       |           /  \
       |          8   55
       4           \  /
       |            5
       |            |
       6            7
        \          /
          -> 汇聚9
               |
              10
               |
              11
               |
              12
上面是我DAG，使用邻接表实现的，我希望实现一个DAG调度器，1为true时：
=== 执行分支1 (剪掉3分支)===
执行节点: 1
执行节点: 2
执行节点: 4
执行节点: 6
执行节点: 9
执行节点: 10
执行节点: 11
执行节点: 12

1为false时：
=== 执行分支2 (剪掉2分支)===
执行节点: 1
执行节点: 3
执行节点: 8
执行节点: 55
执行节点: 5
执行节点: 7
执行节点: 9
执行节点: 10
执行节点: 11
执行节点: 12

上面只是一个例子，我想做的是DAG执行调度器，我的节点可能有条件节点、普通节点